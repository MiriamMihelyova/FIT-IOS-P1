#!/usr/bin/env bash

#create MOLE_RC
mole_rc_check(){
    if [ ! -f $MOLE_RC ]
    then 
        touch $MOLE_RC
        echo "MOLE_RC is now set"
    fi
}


#EDITOR
editors() {
    if [ ! -z $EDITOR ] 
    then
        MY_EDITOR=EDITOR
    elif [ ! -z  $VISUAL ]
    then
        MY_EDITOR=VISUAL
    else
        MY_EDITOR=vi
    fi
    return 0
}

test(){
    echo "------TEST-------"
    if [ $GROUP_NAME == "-" ]
    then
        new_path=$(grep $DIR $MOLE_RC | search_by_date_po | search_by_date_pred| file_exists | search_by_m)
    else
        new_path=$(grep $DIR $MOLE_RC | search_by_g) #| search_by_date_po | search_by_date_pred | file_exists | search_by_m)
    fi

    GROUP_NAME="-"
    if [[ -n $new_path ]]
    then
        open_file $new_path
        exit 0
    else
        echo "file does not exist"
        exit 1
    fi
}

search_list(){
    if [ $GROUP_NAME == "-" ]
    then
        echo "$(grep $DIR $MOLE_RC | search_by_date_po | search_by_date_pred | sort_by_group | column -t)"
    else
        echo "$(grep $DIR $MOLE_RC | search_by_date_po | search_by_date_pred |  search_by_g | sort | sort_by_group | column -t)"
    fi

    GROUP_NAME="-"
}

secret_log(){
    if ! [[ -d "/home/$USER/.mole" ]]
    then
        mkdir "/home/$USER/.mole"
    fi
    SECRET_FILE=/home/$USER/.mole/"log_"$USER"_"$(date +"%Y-%m-%d_%H-%M-%S")   
}

file_exists(){
    awk '{if (system("[ -f \"" $1 "\" ]") == 0) {print $0}}'
}

secret_directories(){
    echo "$(grep $1 $MOLE_RC | search_by_date_po | search_by_date_pred| awk '{a[$1]=a[$1]?a[$1]";"$3:$3}; END {for (i in a) print i";"a[i]}'| awk '{print substr($0, 1, length($0)-1)}')">>$SECRET_FILE
}

zip(){
    bzip2 $SECRET_FILE
}

sort_by_group(){
    awk '{print $2, $0}'| sort | cut -d ' ' -f 2- | sed 's/.*\///'| sort -u -k1,'2'| awk '{a[$1]=a[$1] $2 ","}; END {for (i in a) print i":", a[i]}'| awk '{print substr($0, 1, length($0)-1)}'| sort
}

search_by_g(){
    if echo "$GROUP_NAME" | grep -q ","
    then
        awk -v arg="$GROUP_NAME" '{split(arg, arr, ","); for (i in arr) {if(arr[i] ~ $2) {print}}}'
    else
        awk -v var="$GROUP_NAME" '$2 ~ var {print}'
    fi
}

search_by_m(){
    if [ $CONTAINS_M != "-" ] 
    then
        awk '{print $1}' |sort | uniq -c |sort -n | tail -1 | awk '{print $2}'
    else
        awk '{print $1}' | tail -1
    fi
}

search_by_date_po(){
    if ! [[ $DATUM_PO == "-" ]] # -a
    then
        awk -F '_' '{print$1}' |  awk -v user_date="$DATUM_PO" '{ if ($3 >= user_date) print}' 
    else
         awk '{print}'
    fi 
}

search_by_date_pred(){
    if ! [[ $DATUM_PRED == "-" ]] && [[ $DATUM_PO == "-" ]] #-b
    then
        awk -F '_' '{print$1}' |  awk -v user_date="$DATUM_PRED" '{ if ($3 <= user_date) print}'
    elif ! [[ $DATUM_PRED == "-" ]]
    then
        awk -v user_date="$DATUM_PRED" '{ if ($3 <= user_date) print}'
    else
        awk '{print}'
    fi
}

open_file(){
    $MY_EDITOR $new_path
    write_file_to_mole $1
    return 0
}

write_file_to_mole(){
    echo "$1 $GROUP_NAME $(date +%F_%H-%M-%S)">> $MOLE_RC
}

edit_file(){

    $MY_EDITOR $1
    echo $(cd "$(dirname "$1")"; pwd)/$(basename "$1") $GROUP_NAME $(date +%F_%H-%M-%S)>> $MOLE_RC
}


#OPEN FILE/directory  IF FILE 
file_check(){
    if [ -f $1 ] && [ $L_S != "list" ] && [ $L_S != "log" ]
    then
        echo "------FILE-------"
        edit_file $1
        return 1
    elif [ -d $1 ]
    then
        DIR=$1
        if [[ $L_S == "list" ]]
        then 
            echo "-----LIST-------"
            search_list
        elif [[ $L_S == "log" ]]
        then
            echo "-----LOG-------"
            secret_log
        else
            test
        fi
        return  1
    else
        if [[ $L_S == "list" ]]
        then 
            echo "-----LIST-------"
            search_list
        elif [[ $L_S == "log" ]]
        then
            echo "-----LOG-------"
            secret_log
        else
            test
        fi
        return  1
    fi
    return 0
    }


main(){
    if [[ $1 == "list" ]]
    then
        L_S="list"
        shift 1
    elif [[ $1 == "secret-log" ]]
    then
        L_S="log"
        shift 1
    fi

    while getopts "hmg:a:b:" arg
        do case "$arg" in
            h)  echo "mole -h"
                echo "mole [-g GROUP] FILE"
                echo "mole [-m] [FILTERS] [DIRECTORY]"
                echo "mole list [FILTERS] [DIRECTORY]"
                exit 0;;

            g)  GROUP_NAME=$OPTARG;;
            m)  CONTAINS_M="yes";;
            a)  DATUM_PO=$OPTARG;;
            b)  DATUM_PRED=$OPTARG;;

            *)  echo "not allowed argument" 
                exit 1;;
        esac
    done


    if [[ $L_S == "log" ]]
    then
        secret_log
        for argument in "$@"
        do
            if [[ -d $argument ]]
            then
                secret_directories $argument
            fi
        done
        zip
    elif [[ $# > 0 ]] || [[ $L_S == "list" ]]
    then
        file_check ${@: -1}
    else
        test
    fi    

}


#---------TO DO----------
#aby ked nezada dir ale nieje to ani file
#scontrolovat ci vsetko funguje... vsetky variacie
# hodit to cele do mole funkcie
#to MOLERC nastavit normalne

mole(){
    GROUP_NAME="-"
    CONTAINS_M="-"
    DATUM_PO="-"
    DATUM_PRED="-"
    DIR=$PWD
    SECRET_FILE="-"
    L_S="-"

    editors
    main $@
    exit 0
}

mole $@
